#!/usr/bin/env bash

set -euo pipefail

original_branch=$(git rev-parse --abbrev-ref HEAD)
merge_base=$(git merge-base $original_branch origin/main)
first_commit_after_merge_base=$(git log $merge_base..$original_branch --format="%H" | tail -1)

# git branch --contains will include some nonsense words like "HEAD detached at <SHA>"
# so ensure that all output can be parsed as a rev
branches=($(git branch --contains $first_commit_after_merge_base | tr -d '*()'))
show_branches=()
for branch in "${branches[@]}"; do
  if git rev-parse "$branch" >/dev/null 2>&1; then
    show_branches+=("$branch")
  fi
done

if [[ "${#show_branches}" -eq 0 ]]; then
    echo "No branches found in the stack."
    exit 1
fi

#git lgs "$last_branch_in_stack"
git lgs "${show_branches[@]}"
