#!/usr/bin/env zsh

# Lines configured by zsh-newuser-install
typeset -U PATH
export PATH="$HOME/.local/clang/bin:$HOME/.local/bin:$HOME/.cargo/bin:$PATH:/usr/local/bin:/usr/local/sbin:/usr/local/opt/terraform@0.13/bin"
if [[ -n $JUST_WANT_PATH ]] ; then
    return
fi
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
setopt extendedglob notify
unsetopt nomatch
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/Users/bwm/.zshrc'

fpath=($fpath $HOME/.local/zsh-completions $HOME/.zplugin/completions)
autoload -Uz compinit
compinit
# End of lines added by compinstall

# I should probably figure out how to make this work the same as all the other compdefs
#compdef _pastel pastel

#export PATH="/Users/bwm/Library/Python/3.8/bin:/Users/bwm/Library/Python/3.7/bin:$PATH"
# commandlinetools overwrites the llvm that cargo wants, I think
export PATH="$PATH:/Library/Developer/CommandLineTools/usr/bin"
export SDKROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX11.3.sdk

# Open current command line in vim
autoload edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

### Added by Zplugin's installer
source '/Users/bwm/.zplugin/bin/zinit.zsh'
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zplugin's installer chunk
# zplugins, http://zdharma.org/zplugin/wiki/INTRODUCTION/

zinit light zdharma/fast-syntax-highlighting
# TAB COMPLETIONS
zinit ice wait"0b" lucid blockf
zinit light zsh-users/zsh-completions
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' menu select=2
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle ':completion:*:descriptions' format '-- %d --'
zstyle ':completion:*:processes' command 'ps -au$USER'
zstyle ':completion:complete:*:options' sort false
zstyle ':fzf-tab:complete:_zlua:*' query-string input
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm,cmd -w -w"
zstyle ':fzf-tab:complete:kill:argument-rest' extra-opts --preview=$extract'ps --pid=$in[(w)1] -o cmd --no-headers -w -w' --preview-window=down:3:wrap
zstyle ":completion:*:git-checkout:*" sort false
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

#zinit ice wait atload'_zsh_autosuggest_start'
#zinit light zsh-users/zsh-autosuggestions
zinit ice wait lucid
zinit snippet OMZ::plugins/autojump/autojump.plugin.zsh
export CASE_SENSITIVE=false
zinit ice wait lucid
zinit snippet OMZ::lib/completion.zsh

zinit ice as"completion"
zinit snippet https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker

zinit ice as"completion" lucid
zinit ice pick'jwilm/alacritty/extra/completions/_alacritty'
zinit ice svn wait'0' lucid
zinit snippet PZT::modules/python
zinit ice wait'0' atload'__zplg_async_run' lucid
zinit light _local---pyenv-venvw
export NVM_AUTO_USE=true
zinit ice wait"1" lucid
zinit light lukechilds/zsh-nvm

zinit ice wait lucid
zinit load 'wfxr/forgit'

if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# zinit light romkatv/powerlevel10k
# [[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
eval "$(starship init zsh)"

alias -r ls=exa
alias -r ll="ls -l"
alias -r ll="ls -la"
alias -r grep="grep --color=auto"
alias -r e="emacsclient --no-wait --socket-name=${HOME}/.emacs.d/server/server"
alias -r et="emacsclient --tty --socket-name=${HOME}/.emacs.d/server/server"
alias -r rg="rg --smart-case"
alias -r dc="docker-compose"

psgrep() {
    ps -eo 'pid ppid %cpu %mem etime args' | rg --color=always "(PID|$1)" | rg -v -w "rg"
}

# github clone
ghc() {
    (
        cd "$MATERIALIZE_GIT_ROOT" || return 1
        git clone "$1"
    )
    local bn="${1##*/}"
    bn="${bn%%.*}"
    # show where it was cloned and put `cd $clonedir` in the clipboard
    echo
    echo "$MATERIALIZE_GIT_ROOT/${bn}" | tee >( echo -n "cd $(cat -)" | tr -d $'\n' | pbcopy)
}

#export RUSTC_WRAPPER=/Users/bwm/.cargo/bin/sccache

export GOPATH=$HOME/go
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='fd'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# history
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history data
# duplicate detection
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_all_dups   # Delete old recorded entry if new entry is a duplicate
setopt hist_save_no_dups      # Don't write duplicate entries in the history file

# see /Users/bwm/Library/Preferences/org.dystroy.broot/conf.toml for broot config
source /Users/bwm/Library/Preferences/org.dystroy.broot/launcher/bash/br
export MATERIALIZE_SH="$HOME/.materialize.sh"
source "$MATERIALIZE_SH"
source "$HOME/.local.sh"
alias -r lzd='lazydocker'
alias -r lzg='lazygit'
alias -r i='/Users/bwm/github/infra/i'
# docker stop all
alias dsa='docker stop $(docker ps -q)'

export path=("$HOME/github/materialize/bin" $path)
ussh() {
    ip="$1" && shift
    ssh "$@" ubuntu@"$ip"
}

function vterm_printf() {
    if [ -n "$TMUX" ]; then
        # Tell tmux to pass the escape sequences through
        # (Source: http://permalink.gmane.org/gmane.comp.terminal-emulators.tmux.user/1324)
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}
if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
    # alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
    prompt_vterm_end() {
        vterm_printf "51;A$(whoami)@$(hostname):$(pwd)";
    }
    POWERLEVEL9K_LEFT_PROMPT_ELEMENTS+=vterm_end
fi
export LESSOPEN='|/usr/local/bin/lesspipe.sh %s' LESS_ADVANCED_PREPROCESSOR=1
export MZ_DEV=1
#export PATH="/usr/local/opt/llvm/bin:$PATH"
export CONFLUENT_HOME=/Users/bwm/.local/confluent
# enabling these causes trait-resolution compilation errors
#export CARGO_PROFILE_DEV_DEBUG=1
#export RUSTFLAGS=" -Csplit-debuginfo=unpacked -Clink-arg=-fuse-ld=lld"
alias clx='confluent local services stop'
